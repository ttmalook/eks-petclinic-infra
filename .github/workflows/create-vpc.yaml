# 사용자의 요청대로 run 블록 안의 각 명령을 사전에 상세히 주석으로 설명하는 YAML 생성
final_yaml_with_pre_run_comments = """\
# ============================================================
# GitHub Actions Workflow: CloudFormation 기반 VPC 자동 배포
# ------------------------------------------------------------
# 이 워크플로는 vpc-3tier.yaml 파일을 AWS CloudFormation을 통해
# 자동으로 배포하여 VPC 및 네트워크 인프라를 생성합니다.
# ============================================================

name: Deploy VPC via CloudFormation

on:
  # 워크플로 트리거 조건: 파일 변경 또는 수동 실행
  push:
    paths:
      - 'vpc-3tier.yaml'
      - '.github/workflows/create-vpc.yaml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # GitHub 저장소의 코드 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v3

    # GitHub Secrets에 등록된 AWS 자격 증명을 사용하여 인증
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # CloudFormation 스택을 배포하는 단계입니다.
    # 아래 명령어는 vpc-3tier.yaml 템플릿을 사용하여 CloudFormation 스택을 생성 또는 업데이트합니다.
    # --template-file: 사용할 템플릿 파일 경로
    # --stack-name: 생성될 스택의 이름 (vpc-3tier-stack)
    # --capabilities: IAM 리소스 생성을 허용 (필수 옵션)
    - name: Deploy CloudFormation Stack
      run: |
        aws cloudformation deploy \
          --template-file vpc-3tier.yaml \
          --stack-name vpc-3tier-stack \
          --capabilities CAPABILITY_NAMED_IAM

    # 배포한 스택의 상태를 출력합니다.
    # 이 명령어는 CloudFormation 스택의 현재 상태를 JSON으로 반환합니다.
    - name: Describe Stack
      run: aws cloudformation describe-stacks --stack-name vpc-3tier-stack
"""

# 저장 경로
final_yaml_path_with_explained_run = "/mnt/data/create-vpc-documented.yaml"
with open(final_yaml_path_with_explained_run, "w") as f:
    f.write(final_yaml_with_pre_run_comments)

final_yaml_path_with_explained_run
