# 워크플로의 이름을 지정합니다 (GitHub Actions 탭에서 이 이름으로 표시됩니다)
name: Deploy VPC via CloudFormation

# 워크플로 실행 조건 정의
on:
  # 아래 파일이 push될 때 자동 실행
  push:
    paths:
      - 'vpc-3tier.yaml'                       # VPC 템플릿 파일이 변경되었을 때
      - '.github/workflows/create-vpc.yaml'    # 이 워크플로 자체가 변경되었을 때
  # GitHub Actions 페이지에서 수동 실행도 가능하게 합니다
  workflow_dispatch:

jobs:
  deploy:
    # GitHub Actions에서 사용할 실행 환경 (ubuntu 가상 머신)
    runs-on: ubuntu-latest

    steps:
    # Step 1: GitHub 리포지토리 코드 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: AWS 자격 증명 설정 (Secrets에서 읽어옴)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}             # GitHub에 등록한 AWS 키
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}     # GitHub에 등록한 시크릿 키
        aws-region: ap-northeast-2                                      # 서울 리전

    # Step 3: CloudFormation을 사용하여 VPC 스택 배포
    - name: Deploy CloudFormation Stack
      run: |
        aws cloudformation deploy \
          --template-file vpc-3tier.yaml \                 # 배포할 템플릿 파일 경로
          --stack-name vpc-3tier-stack \                   # 스택 이름 지정
          --capabilities CAPABILITY_NAMED_IAM              # IAM 리소스 생성을 허용

    # Step 4: 배포한 스택의 상태 확인
    - name: Describe Stack
      run: aws cloudformation describe-stacks --stack-name vpc-3tier-stack
